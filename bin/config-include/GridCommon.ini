; This is the main configuration file for an instance of OpenSim running in grid mode
; In particular, this one is set up for connecting to Infinite Grid.

[DatabaseService]
    ;
    ; ### Choose the DB
    ;
    ; NOTE - both are commented out, you'l have to choose one yourself.
    ;

    ; SQLite
    ; Include-Storage = "config-include/storage/SQLiteStandalone.ini";

    ; MySql
    ; Uncomment these lines if you want to use mysql storage
    ; Change the connection string to your db details
    ;StorageProvider = "OpenSim.Data.MySQL.dll"
    ;ConnectionString = "Data Source=localhost;Database=opensim;User ID=opensim;Password=***;Old Guids=true;"
    ; Uncomment this line if you are using MySQL and want to use a different database for estates
    ; The usual application for this is to allow estates to be spread out across multiple simulators by share the same database.
    ; Most people won't need to do this so only uncomment if you know what you're doing.
    ;EstateConnectionString = "Data Source=localhost;Database=opensim;User ID=opensim;Password=***;Old Guids=true;"

    ; MSSQL
    ; Uncomment these lines if you want to use MSSQL storage
    ; Change the connection string to your db details
    ; The value for server property is shown in your SQL Server Management Studio login dialog.
    ; (This sample is the default of express edition)
    ;StorageProvider = "OpenSim.Data.MSSQL.dll"
    ;ConnectionString = "Server=localhost\SQLEXPRESS;Database=opensim;User Id=opensim; password=***;"

[Modules]
    ;; Choose one cache module and the corresponding config file, if it exists.
    ;; Copy the config .example file into your own .ini file and adapt that.
    ;; We recommend the use of the FlotsamAssetCache since this is most actively maintained.

    AssetCaching = "FlotsamAssetCache"
    Include-FlotsamCache = "config-include/FlotsamCache.ini"

    ;AssetCaching = "CenomeMemoryAssetCache"
    ;Include-CenomeCache = "config-include/CenomeCache.ini"

    ;AssetCaching = "GlynnTuckerAssetCache"

    ;; Optionally, the port for the LLProxyLoginModule module can be changed
    ;Setup_LLProxyLoginModule = "9090/"

    ;; Authorization is not on by default, as it depends on external php
    ;AuthorizationServices = "RemoteAuthorizationServicesConnector"

    ;; To allow the Teleport and Show on Map buttons to work properly (for search
    ;; results containing locations).  From ossearch module.
    LandServices = "RemoteLandServicesConnector"
    LandServiceInConnector = "true"

[AssetService]
    DefaultAssetLoader = "OpenSim.Framework.AssetLoader.Filesystem.dll"
    AssetLoaderArgs = "assets/AssetSets.xml"

    ;
    ; Change this to your grid-wide asset server.  Do not add a slash to the end of any of these addresses.
    ;
    AssetServerURI = "http://grid.infinitegrid.org:6003"

[InventoryService]
    ;
    ; Change this to your grid-wide inventory server
    ;
    InventoryServerURI = "http://grid.infinitegrid.org:6003"

[GridInfo]
   ;
   ; Change this to your grid info service
   ;
   GridInfoURI = "http://grid.infinitegrid.org:6002"

[GridService]
    ;
    ; Change this to your grid-wide grid server
    ;
    GridServerURI = "http://grid.infinitegrid.org:6003"
    AllowHypergridMapSearch = true

    ;; Directory for map tile images of linked regions
    ; MapTileDirectory = "./maptiles"
    MapTileDirectory = "caches/maptiles"

    ; === HG ONLY ===
    ;; Change this to the address of your Gatekeeper service
    ;; (usually bundled with the rest of the services in one 
    ;; Robust server in port 8002, but not always)
    Gatekeeper="http://grid.infinitegrid.org:6002"

[Messaging]
    ; === HG ONLY ===
    ;; Change this to the address of your Gatekeeper service
    ;; (usually bundled with the rest of the services in one 
    ;; Robust server in port 8002, but not always)
    Gatekeeper = "http://grid.infinitegrid.org:6002"

[AvatarService]
    ;
    ; Change this to your grid-wide grid server
    ;
    AvatarServerURI = "http://grid.infinitegrid.org:6003"

[PresenceService]
    ;
    ; Change this to your grid-wide presence server
    ;
    PresenceServerURI = "http://grid.infinitegrid.org:6003"

[UserAccountService]
    ;
    ; Change this to your grid-wide user accounts server
    ;
    UserAccountServerURI = "http://grid.infinitegrid.org:6003"

[GridUserService]
    ;
    ; Change this to your grid-wide user accounts server
    ;
    GridUserServerURI = "http://grid.infinitegrid.org:6003"

[AuthenticationService]
    ;
    ; Change this to your grid-wide authentication server
    ;
    AuthenticationServerURI = "http://grid.infinitegrid.org:6003"

[FriendsService]
    ;
    ; Change this to your grid-wide friends server
    ;
    FriendsServerURI = "http://grid.infinitegrid.org:6003"

[HGInventoryAccessModule]
    ;
    ; === HG ONLY ===
    ; Change this to your server 
    ; accessible from other grids
    ;
    HomeURI = "http://grid.infinitegrid.org:6002"
    Gatekeeper = "http://grid.infinitegrid.org:6002"
    ;; If you want to protect your assets from being copied by foreign visitors
    ;; uncomment the next line. You may want to do this on sims that have licensed content.
    OutboundPermission = True

	;; Send visual reminder to local users that their inventories are unavailable while they are traveling
	;; and available when they return. True by default.
	;RestrictInventoryAccessAbroad = True


[HGAssetService]
    ;
    ; === HG ONLY ===
    ; Change this to your server 
    ; accessible from other grids
    ;
    HomeURI = "http://grid.infinitegrid.org:6002"

    ;; The asset types that this grid can export to / import from other grids.
	;; Comma separated.
	;; Valid values are all the asset types in OpenMetaverse.AssetType, namely:
	;; Unknown, Texture, Sound, CallingCard, Landmark, Clothing, Object, Notecard, LSLText, 
	;; LSLBytecode, TextureTGA, Bodypart, SoundWAV, ImageTGA, ImageJPEG, Animation, Gesture, Mesh 
	;;
	;; Leave blank or commented if you don't want to apply any restrictions.
	;; A more strict, but still reasonable, policy may be to disallow the exchange 
	;; of scripts, like so:
    ; DisallowExport ="LSLText"
    ; DisallowImport ="LSLBytecode"

[HGFriendsModule]
    ; User level required to be able to send friendship invitations to foreign users
    LevelHGFriends = 0;

[UserAgentService]
    ;
    ; === HG ONLY ===
    ; Change this to your user agent server (HG robust)
    ;
    UserAgentServerURI = "http://grid.infinitegrid.org:6002"

[MapImageService]
   	MapImageServerURI = "http://grid.infinitegrid.org:6003"

[AuthorizationService]
	; If you have regions with access restrictions
	; specify them here using the convention
	; Region_<Region_Name> = <flags>
	; Valid flags are:
	; DisallowForeigners -- HG visitors not allowed
	; DisallowResidents -- only Admins and Managers allowed
	; Example:
	; Region_Test_1 = "DisallowForeigners"


;; From the original IG version -
[Profile]
    ProfileURL = http://www.infinitegrid.org/os_beta/profile.php


[Search]
    SearchURL = http://www.infinitegrid.org/os_beta/query.php


[DataSnapshot]
    ;# {gridname} {index_sims:true} {Enter the name fo your grid} {} OSGrid
    ;; If search is on, change this to your grid name; will be ignored for
    ;; standalones
    gridname = "InfiniteGrid"

    ;# {data_services} {index_sims:true} {Data service URLs to register with?} {} http://metaverseink.com/cgi-bin/register.py
    ; This semicolon-separated string serves to notify specific data services
    ; about the existence of this sim. Uncomment if you want to index your
    ; data with this and/or other search providers.
    data_services="http://www.infinitegrid.org/os_beta/register.php"


[Messaging]
;; From the original IG version -
    InstantMessageModule = InstantMessageModule
;    MessageTransferModule = MessageTransferModule
;    MuteListModule = NSLMuteListModule

    ;# {OfflineMessageModule} {} {Module to use for offline message storage} {OfflineMessageModule *}
    ;; Module to handle offline messaging. The core module requires an external
    ;; web service to do this. See OpenSim wiki.
    OfflineMessageModule = OfflineMessageModule

    ;# {OfflineMessageURL} {OfflineMessageModule:OfflineMessageModule} {URL of offline messaging service} {}
    ;; URL of web service for offline message storage
    OfflineMessageURL = http://www.infinitegrid.org/os_beta/offline.php

    ;# {MuteListModule} {OfflineMessageModule:OfflineMessageModule} {} {} MuteListModule
    ;; Mute list handler (not yet implemented). MUST BE SET to allow offline
    ;; messages to work
    MuteListModule = MuteListModule

    ;# {MuteListURL} {OfflineMessageModule:OfflineMessageModule} {} {} http://yourserver/Mute.php
    ;; URL of the web service that serves mute lists. Not currently used, but
    ;; must be set to allow offline messaging to work.
    MuteListURL = http://www.infinitegrid.org/os_beta/mute.php

    ;; Control whether group messages are forwarded to offline users.
    ;; Default is true.
    ;; This applies to the core groups module (Flotsam) only.
    ForwardOfflineGroupMessages = false


[Groups]
    ;# {Module} {Enabled:true} {Groups module to use? (Use GroupsModule to use Flotsam/Simian)} {} Default
    ;; This is the current groups stub in Region.CoreModules.Avatar.Groups.
    ;; All the other settings below only really apply to the Flotsam/SimianGrid
    ;; GroupsModule.
    ;; This module can use a PHP XmlRpc server from the Flotsam project at
    ;; http://code.google.com/p/flotsam/
    ;; or from the SimianGrid project at http://code.google.com/p/openmetaverse
    ; Module = Default
    Module = GroupsModule

    ;# {MessagingEnabled} {Module:GroupsModule} {Is groups messaging enabled?} {true false} true
    MessagingEnabled = true

    ;# {MessagingModule} {MessagingEnabled:true} {Module to use for groups messaging} {GroupsMessagingModule} GroupsMessagingModule
    MessagingModule = GroupsMessagingModule

    ; Experimental option to only message cached online users rather than all users
    ; Should make large group with few online members messaging faster, as the expense of more calls to ROBUST presence service
    ; This currently only applies to the Flotsam XmlRpc backend
    MessageOnlineUsersOnly = true

    ;# {ServicesConnectorModule} {Module:GroupsModule} {Service connector to use for groups} {XmlRpcGroupsServicesConnector SimianGroupsServicesConnector} XmlRpcGroupsServicesConnector
    ;; Service connectors to the Groups Service as used in the GroupsModule.  Select one depending on
    ;; whether you're using a Flotsam XmlRpc backend or a SimianGrid backend
    ServicesConnectorModule = XmlRpcGroupsServicesConnector

    ;# {GroupsServerURI} {Module:GroupsModule} {Groups Server URI} {}
    ;; URI for the groups services
    ;; e.g. http://yourxmlrpcserver.com/xmlrpc.php for Flotsam XmlRpc
    ;; or http://mygridserver.com:82/Grid/ for SimianGrid
    GroupsServerURI = "http://www.infinitegrid.org/os_beta/xmlrpc.php"

    ;# {NoticesEnabled} {Module:GroupsModule} {Enable group notices?} {true false} true
    ;; Enable Group Notices
    NoticesEnabled = true

    ;; This makes the Groups modules very chatty on the console.
    DebugEnabled = false

    ;; XmlRpc Security settings.  These must match those set on your backend
    ;; groups service if the service is using these keys
    XmlRpcServiceReadKey    = Uffmzl93xvrZK1w6KWeMg25pls8zWBr7hhibNDqzVy8qH4J
    XmlRpcServiceWriteKey   = sgJfEs4nzRJ4GLlLGTRIqIYW6SPlUiu4MtauZkcmReuZaYh

[Includes]

    ;; This is an example, you'll need to provide your own.
    Include-Common = config/database.ini
